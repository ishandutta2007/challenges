#!/usr/bin/env/python

"""

Create a function that takes an integer n and returns the factorial of factorials. See below examples for a better understanding:

Examples

fact_of_fact(4) ➞ 288
# 4! * 3! * 2! * 1! = 288

fact_of_fact(5) ➞ 34560

fact_of_fact(6) ➞ 24883200

Notes

N/A

"""

from functools import reduce
import math

def factfact(n):
    if n < 0:
        return 0
    if n <= 1:
        return 1
    return reduce(lambda a, b: a * b, map(math.factorial, range(2, n+1)))

def main():
    assert(factfact(4) == 288)
    assert(factfact(1) == 1)
    assert(factfact(5) == 34560)
    assert(factfact(2) == 2)
    assert(factfact(6) == 24883200)
    assert(factfact(3) == 12)
    assert(factfact(14) == 69113789582492712943486800506462734562847413501952000000000000000)
    assert(factfact(11) == 265790267296391946810949632000000000)
    assert(factfact(7) == 125411328000)
    assert(factfact(22) == 73185187344722251685917129061596359994436879170423331597220791224873045503248922811481956548134913475324429128068839519292427638045690327208977109451014144000000000000000000000000000000000000000000)
    assert(factfact(13) == 792786697595796795607377086400871488552960000000000000)
    assert(factfact(8) == 5056584744960000)
    assert(factfact(10) == 6658606584104736522240000000)
    assert(factfact(9) == 1834933472251084800000)
    assert(factfact(12) == 127313963299399416749559771247411200000000000)
    assert(factfact(15) == 90378331112371142262979521568630736335023247731599748366336000000000000000000)
    assert(factfact(16) == 1890966832292234727042877370627225068196418587883634153182519380410368000000000000000000000)
    assert(factfact(17) == 672593129192865130334217631473916658864122332882577979675277211683839238972899328000000000000000000000000)
    assert(factfact(18) == 4306192564997715382115598640379294845786123319603755168023536027873932927153136831171640950784000000000000000000000000000)
    assert(factfact(19) == 523827226948912906162136183269887782788685420217963126789982275317725639664591791615428617583779071590924288000000000000000000000000000000)
    assert(factfact(20) == 1274420312381610764187232669591245728094053576480399681464607478621086015845192873311847341571189522511934190056991170232320000000000000000000000000000000000)
    assert(factfact(21) == 65111334482340755583337032079153276047018894694274871209973336023462275586396482041798135409436085152342597056410325664391109570976337100800000000000000000000000000000000000000)

main()
